name: Delivery
on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
    branches:
      - 'develop'
jobs:
  terrabuild:
    runs-on: ubuntu-20.04
    outputs:
      exitcode: ${{ steps.apply.outputs.exitcode }}
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: 0
      GOOGLE_CREDENTIALS: key.json
    steps:
      - name: Checkout terraform code
        uses: actions/checkout@v3
        with:
          repository: RaphaeldeGail/probable-packer-infra
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.2
          terraform_wrapper: true
      - name: Create secret configurations
        env:
          BACKEND_CONFIG: ${{ secrets.TF_BACKEND_CONFIG }}
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          WORKSPACE_PROJECT: ${{ secrets.WORKSPACE_PROJECT}}
        run: |
          echo $BACKEND_CONFIG | base64 --decode > config.bucket.tfbackend &&\
          echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_CREDENTIALS }} &&\
          echo "TF_VAR_workspace={\"name\":\"bounce\", \"project\":\"$WORKSPACE_PROJECT\", \"region\":\"europe-west1\"}" >> $GITHUB_ENV
      - name: Initialize Terraform working directory
        run: terraform init -reconfigure -no-color -backend-config=config.bucket.tfbackend
      - name: Plan infrastructure update
        run: terraform plan -no-color -out plan.out
      - name: Apply infrastructure update
        id: apply
        run: |
          terraform apply -no-color plan.out &&\
          rm -f plan.out &&\
          rm -f config.bucket.tfbackend
  packer:
    runs-on: ubuntu-20.04
    outputs:
      manifest: ${{ steps.manifest.outputs.MANIFEST }}
    container:
      image: raphaeldegail/packer:1.8.0
    needs: [terrabuild]
    if: needs.terrabuild.outputs.exitcode == 0
    env:
      GOOGLE_APPLICATION_CREDENTIALS: key.json
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize packer with plugins
        run: packer init .
      - name: Create GCP authentication key.json
        env:
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          WORKSPACE_PROJECT: ${{ secrets.WORKSPACE_PROJECT}}
          RSA_PUBLIC: ${{ secrets.RSA_PUBLIC }}
          RSA_PRIVATE: ${{ secrets.RSA_PRIVATE }}
        run: |
          echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }} &&\
          echo "PKR_VAR_version={\"number\":\"$(cat VERSION.txt)\",\"type\":\"develop\",\"commit\":\"$GITHUB_SHA\"}" >> $GITHUB_ENV &&\
          echo "PKR_VAR_workspace={\"name\":\"bounce\", \"project\":\"$WORKSPACE_PROJECT\", \"region\":\"europe-west1\"}" >> $GITHUB_ENV &&\
          echo "PKR_VAR_machine={\"source_image_family\":\"debian-11\", \"rsa_keystore\":{\"public\":\"$RSA_PUBLIC\", \"private\":\"$RSA_PRIVATE\"}}" >> $GITHUB_ENV
      - name: Build Packer image
        env:
          PKR_VAR_skip_create_image: false
        run: |
          packer build -color=false . &&\
          rm -f ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Fetch image name from manifest
        id: manifest
        run: |
          cat manifest.json
          echo "MANIFEST=$(cat manifest.json)" >> $GITHUB_OUTPUT
  clean:
    runs-on: ubuntu-20.04
    needs: [packer]
    if: ${{ always() }}
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: 0
      GOOGLE_CREDENTIALS: key.json
    steps:
      - name: Checkout terraform code
        uses: actions/checkout@v3
        with:
          repository: RaphaeldeGail/probable-packer-infra
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.2
          terraform_wrapper: true
      - name: Create secret configurations
        env:
          BACKEND_CONFIG: ${{ secrets.TF_BACKEND_CONFIG }}
          CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          WORKSPACE_PROJECT: ${{ secrets.WORKSPACE_PROJECT}}
        run: |
          echo $BACKEND_CONFIG | base64 --decode > config.bucket.tfbackend &&\
          echo $CREDENTIALS | base64 --decode > ${{ env.GOOGLE_CREDENTIALS }} &&\
          echo "TF_VAR_workspace={\"name\":\"bounce\", \"project\":\"$WORKSPACE_PROJECT\", \"region\":\"europe-west1\"}" >> $GITHUB_ENV
      - name: Initialize Terraform working directory
        run: terraform init -reconfigure -no-color -backend-config=config.bucket.tfbackend
      - name: Plan infrastructure update
        run: terraform plan -destroy -no-color -out plan.out
      - name: Apply infrastructure update
        id: apply
        run: |
          terraform apply -no-color plan.out && \
          rm -f plan.out && \
          rm -f config.bucket.tfbackend
  release:
    runs-on: ubuntu-20.04
    container:
      image: google/cloud-sdk:411.0.0-slim
    needs: [packer]
    if: ${{ success() }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: key.json
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create GCP Import import.json
        env:
          IMPORT: ${{ secrets.GOOGLE_IMPORT_CREDENTIALS }}
        run: |
          echo $IMPORT | base64 --decode > import.json
      - name: Test script
        env:
          PROJECT: ${{ secrets.WORKSPACE_PROJECT }}
        # Missing filters for environment values
        run: |
          gcloud auth activate-service-account 'workspace-workstation-v1@workspace-workstation-v1-7p6l.iam.gserviceaccount.com' --key-file=import.json;
          gcloud compute images create \
          "${{ fromJSON(needs.packer.outputs.manifest).build }}" \
          --source-image="${{ fromJSON(needs.packer.outputs.manifest).build }}" \
          --family="${{ fromJSON(needs.packer.outputs.manifest).build }}" \
          --labels "${{ fromJSON(needs.packer.outputs.manifest).build }}" \
          --source-image-project=$PROJECT \
          --project=workspace-workstation-v1-7p6l;
          gcloud auth revoke 'workspace-workstation-v1@workspace-workstation-v1-7p6l.iam.gserviceaccount.com'